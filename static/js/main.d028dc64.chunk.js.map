{"version":3,"sources":["reportWebVitals.ts","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Converter","state","currencies","base","amount","convertTo","result","handleSelect","e","setState","target","name","value","calculate","handleInput","isNaN","koef","toFixed","this","fetch","res","json","data","rates","type","onChange","Object","keys","map","currency","disabled","Component","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"uKAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,0CCiHCQ,E,4MArGXC,MAAQ,CACJC,WAAY,GACZC,KAAM,MACNC,OAAQ,GACRC,UAAW,MACXC,OAAQ,I,EAIZC,aAAe,SAAAC,GAAM,IAAD,EAChB,EAAKC,UAAL,mBAESD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,OAFlC,uBAGgB,MAHhB,GAKI,EAAKC,Y,EAIbC,YAAc,SAAAN,GACV,EAAKC,SACD,CACIL,OAAQI,EAAEE,OAAOE,MACjBN,OAAQ,MAEZ,EAAKO,Y,EAIbA,UAAY,WAER,GADe,EAAKZ,MAAMG,SACXW,MAAf,CAGI,IAAMC,EAAO,EAAKf,MAAMC,WAAW,EAAKD,MAAME,MAAQ,EAAKF,MAAMC,WAAW,EAAKD,MAAMI,WACvF,EAAKI,SAAS,CACVH,QAAS,EAAKL,MAAMG,OAASY,GAAMC,QAAQ,O,uDApDvD,WAAqB,IAAD,OACDC,KAAKjB,MAAMG,SACXW,OAGXI,MAAM,+CAAD,OAAgDD,KAAKjB,MAAME,OAC3DT,MAAK,SAAA0B,GAAG,OAAIA,EAAIC,UAChB3B,MAAK,SAAA4B,GACF,IAAMpB,EAAaoB,EAAKC,MACxB,EAAKd,SAAS,CACVP,oB,oBAgDpB,WAAU,IAAD,EACiDgB,KAAKjB,MAApDC,EADF,EACEA,WAAYC,EADd,EACcA,KAAMC,EADpB,EACoBA,OAAQC,EAD5B,EAC4BA,UAAWC,EADvC,EACuCA,OAC5C,OACI,gCACI,2CAGA,8BACI,gCACI,iCACI,uBACIkB,KAAK,SACLZ,MAAOR,EACPqB,SAAUP,KAAKJ,cAEnB,wBACIH,KAAK,OACLC,MAAOT,EACPsB,SAAUP,KAAKX,aAHnB,SAKKmB,OAAOC,KAAKzB,GAAY0B,KAAI,SAAAC,GAAQ,OACjC,wBAAuBjB,MAAOiB,EAA9B,SACKA,GADQA,WAOzB,iCACI,uBACIC,UAAU,EACVlB,MACe,KAAXR,EACM,IACW,OAAXE,EACA,iBACAA,IAGd,wBACIK,KAAK,YACLC,MAAOP,EACPoB,SAAUP,KAAKX,aAHnB,SAKKmB,OAAOC,KAAKzB,GAAY0B,KAAI,SAAAC,GAAQ,OACjC,wBAAuBjB,MAAOiB,EAA9B,SACKA,GADQA,uB,GA1GzBE,aCIxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1B9C,M","file":"static/js/main.d028dc64.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from \"react\";\n\nclass Converter extends Component {\n\n\n    componentDidMount() {\n        const amount = this.state.amount;\n        if (amount === isNaN) {\n            return;\n        } else {\n            fetch(`https://www.cbr-xml-daily.ru/latest.js?base=${this.state.base}`)\n                .then(res => res.json())\n                .then(data => {\n                    const currencies = data.rates\n                    this.setState({\n                        currencies,\n                    });\n                });\n        }\n    }\n\n    state = {\n        currencies: {},\n        base: \"BYN\",\n        amount: \"\",\n        convertTo: \"EUR\",\n        result: \"\",\n    };\n\n\n    handleSelect = e => {\n        this.setState(\n            {\n                [e.target.name]: e.target.value,\n                result: null\n            },\n            this.calculate\n        );\n    };\n\n    handleInput = e => {\n        this.setState(\n            {\n                amount: e.target.value,\n                result: null,\n            },\n            this.calculate\n        );\n    };\n\n    calculate = () => {\n        const amount = this.state.amount;\n        if (amount === isNaN) {\n            return;\n        } else {\n            const koef = this.state.currencies[this.state.base] / this.state.currencies[this.state.convertTo];\n            this.setState({\n                result: (this.state.amount / koef).toFixed(4)\n            })\n        }\n    };\n\n\n    render() {\n        const {currencies, base, amount, convertTo, result} = this.state;\n        return (\n            <div>\n                <h2>\n                    Converter\n                </h2>\n                <div>\n                    <div>\n                        <form>\n                            <input\n                                type=\"number\"\n                                value={amount}\n                                onChange={this.handleInput}\n                            />\n                            <select\n                                name=\"base\"\n                                value={base}\n                                onChange={this.handleSelect}\n                            >\n                                {Object.keys(currencies).map(currency => (\n                                    <option key={currency} value={currency}>\n                                        {currency}\n                                    </option>\n                                ))}\n                            </select>\n                        </form>\n\n                        <form>\n                            <input\n                                disabled={true}\n                                value={\n                                    amount === \"\"\n                                        ? \"0\"\n                                        : result === null\n                                        ? \"Calculating...\"\n                                        : result\n                                }\n                            />\n                            <select\n                                name=\"convertTo\"\n                                value={convertTo}\n                                onChange={this.handleSelect}\n                            >\n                                {Object.keys(currencies).map(currency => (\n                                    <option key={currency} value={currency}>\n                                        {currency}\n                                    </option>\n                                ))}\n                            </select>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Converter;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}